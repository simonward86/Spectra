function mview(inifile)
%
% function mview(inifile)
%
% MVIEW is a MATLAB based programme to manipulate
% data files in the form of x,y,error. All the main
% arthimetic operations are suported, plus many
% additional features.
%
%
% Des McMorrow 14.6.96
%colordef black

mview_ver='4.2.2 (Aug 22nd, 2005)';
nbuffs_max=20;

%----- Create invisible storage for buffers

hmv_buffers=findobj('Tag','hmv_buffers');
if ~isempty(hmv_buffers)
   delete(hmv_buffers);
end
hmv_buffers=figure('Visible','off','tag','mv_bufig');
uicontrol(hmv_buffers,'Tag','hmv_buffers','Userdata',[]);
uicontrol(hmv_buffers,'Tag','hmv_CurrentBuffer');

%=============  Create control window =========================

hmv_ctrl=findobj('tag','mv_ControlWindow');
if ~isempty(hmv_ctrl)
   h=get(hmv_ctrl,'children');
   delete(h);
   set(hmv_ctrl,'visible','off')
else
   hmv_ctrl=figure('Tag','mv_ControlWindow',...
                   'DefaultUicontrolBackgroundColor',[1 1 1],...
                   'DefaultUicontrolForegroundColor',[0 0 0],...
                   'DefaultUicontrolHorizontalAlignment','left',...
                   'DeleteFcn','mv_exit',...
                   'CloseRequestFcn', 'mv_exit;', ...
                   'Visible','off');
end

%===== Make file menu

%---------------- 'File' menu -----------------------

hmv_ctrl_file=uimenu(hmv_ctrl,'Label',' File');
uimenu(hmv_ctrl_file,'Label',' Load data ','CallBack','mv_gdata;');
uimenu(hmv_ctrl_file,'Label',' Save buffer', 'Callback','mv_save');
if exist('rescal')
  uimenu(hmv_ctrl_file,'Label','Launch Rescal',...
  'Callback','rescal;','Separator','on');
end
if exist('mfit')
  uimenu(hmv_ctrl_file,'Label','Launch MFit',...
  'Callback','mfit;');
end
uimenu(hmv_ctrl_file,'label','About...',...
    'callback',[ 'mv_opt(''About MView ' mview_ver ''');' ]);
uimenu(hmv_ctrl_file,'Label',' Exit Mview','CallBack','mv_exit;',...
                      'Separator','On');

%================ Make storage ===============================

vars=str2mat('LoadRoutineFile','LoadRoutineDir','LoadRoutineName');
vars=str2mat(vars,'DataFile','DataDir');
vars=str2mat(vars,'OutFile','OutDir');
vars=str2mat(vars,...
             'FigurePosition',...
             'FigureSize',...
             'FigureBgColor',...
             'AxesColor',...
             'EbarColor',...
             'DataColor',...
             'MarkerSize',...
             'TextBoxHeight');
vars=str2mat(vars,...
             'AxesFont', 'AxesFontSize',...
             'LabelFont', 'LabelFontSize',...
             'ContWinPosition',...
             'IniFile','LegendStyle');

for i=1:size(vars,1)
   var=vars(i,:);
   i=isspace(var);
   var(i)=[];
   uicontrol(hmv_ctrl,...
             'style','text',...
             'tag',['mv_' var],...
             'visible','off');
end

uicontrol(hmv_ctrl,...
   'tag','mv_VarList',...
   'userdata',vars,...
   'visible','off');

%===== Read .ini file ===============================================

%---- Work out ini file name ----------------------------------------

if nargin==0
   inifile='mview.ini';
elseif nargin==1
   if isempty(findstr(inifile,'.'))
      inifile=[deblank(inifile) '.ini'];
   end
end

%----- Check file exists -------------------------------------------------

fid=fopen(inifile,'r');
if fid==-1
   delete(hmv_ctrl);
   errordlg(['Initialization file ' inifile ' not found'],'MVIEW error:');
end
set(findobj('tag','mv_IniFile'),'string',inifile);

%----- Set up tag names for registry section -----------------------------

SecTag   =str2mat('load routines');
NameTag  =str2mat('mv_LoadRoutineName');
FileTag  =str2mat('mv_LoadRoutineFile');
DirTag   =str2mat('mv_LoadRoutineDir');
MenuTag  =str2mat('mv_LoadRoutineMenu');
MenuTitle=str2mat('Load Routines');
STag=reshape(SecTag',1,size(SecTag,1)*size(SecTag,2));

disp('MVIEW reading mview.ini file')
drawnow

%----- Read line by line to end of .ini file ------------------------------------------

line=fgetl(fid);
while ~any(line==-1)

%-- Read to beginning of section (contains '{')

   while ~any(line==-1) & isempty(findstr(line,'{'))
      line=fgetl(fid);
   end

%-- Get name of section

   Section=lower(strtok(line,'{}'));
   line=fgetl(fid);
   disp(['Reading ' char(Section) ' section...'])
   drawnow

%----- {General} section has lines 'property = value'------------------------

   if ~isempty(findstr(Section,'general'))

      while ~any(line==-1) & isempty(findstr(line,'{'))
         [Name s]=strtok(line,'=');              % Property name
         Value=strtok(s,'=');                  % Property value
         if ~isempty(Value);
            Name=Name(~isspace(Name));
            Value=deblank(fliplr(deblank(fliplr(Value))));
            hh=findobj('Tag',['mv_' Name]);
            if ~isempty(hh);
               set(findobj('Tag',['mv_' Name]),'String',Value);
            else
               disp([Name ' not defined'])
            end
         end

         line=fgetl(fid);

      end

%----- Registry sections have entries of the form 'm-file name, path, description'-----

   elseif ~isempty(findstr(Section,STag))

   for Sec=1:size(SecTag,1)                        % Step through each section

      if ~isempty(findstr(Section,SecTag(Sec,:)))          % If it's a section

         File=[]; Dir=[]; Name=[];

         hmenu=uimenu(hmv_ctrl,'label',MenuTitle(Sec,:),...   % Make main menu
                               'tag',deblank(MenuTag(Sec,:)));
         uimenu(hmenu,'label','Other...',...               % 'Browse...' entry
                      'callback',['mv_brows(''' SecTag(Sec,:) ''');']);
         Sep='on';

         while line~=-1 & isempty(findstr(line,'{'))
      [ff s]=strtok(line,','); ff=ff(~isspace(ff));     % Get m-file name
      [dd s]=strtok(s,','); dd=dd(~isspace(dd));       % Get path
      nn=strtok(s,',');                                % Get description
            if isempty(nn)                                    % It's a separator...
               Sep='on';
            else                                              % It's a registry line
               File=str2mat(File, ff);                         % Array of filenames
               Dir=str2mat(Dir, dd);                          % Array of dir names
               nn=deblank(fliplr(deblank(fliplr(nn))));       % Array of descriptions
               Name=str2mat(Name, nn);

%----- Callback sets Name, File, and Directory strings to new values

               Call=[['set(findobj(''tag'',''' deblank(NameTag(Sec,:)) ...
                 '''),''string'',''' nn '''); ']...
                     ['set(findobj(''tag'',''' deblank(DirTag(Sec,:))...
                                   '''),''string'',''' dd '''); ']...
                     ['set(findobj(''tag'',''' deblank(FileTag(Sec,:))...
                                   '''),''string'',''' ff ''');']];
               uimenu(hmenu,'label',nn,'callback',Call,'separator',Sep);
               Sep='off';
            end

         line=fgetl(fid);

         end

         File(1,:)=[]; Dir(1,:)=[]; Name(1,:)=[];

%--- Set storage -----------------------------------------------------

         set(findobj('Tag',deblank(NameTag(Sec,:))),...
                     'Userdata',Name,...
                     'string',deblank(Name(1,:)));
         set(findobj('Tag',deblank(FileTag(Sec,:))),...
                     'Userdata',File,...
                     'string',deblank(File(1,:)));
         set(findobj('Tag',deblank(DirTag(Sec,:))),...
                     'Userdata',Dir,...
                     'string',deblank(Dir(1,:)));

         end
      end
   end
end

fclose(fid);

%============= Make MVIEW control window from here===========

Fposl=10; Fposb=0; Fwidth=255+145; Fheight=440;

Mposl=2; Mwidth=Fwidth-4; Mheight=30; Mposb=Fheight-35-150;

Bspace=3;
Bheight=str2num(get(findobj('tag','mv_TextBoxHeight'),'string'));
for i=1:9
   Vpos(i)=i*Bspace+i*Bheight;
end
Vpos=Fheight-Vpos;

NL = sprintf('\n');

%---------------- 'Data File' title -----------------------
uicontrol(hmv_ctrl,...
          'Style','Text',...
          'String','Data file',...
          'BackgroundColor',get(0,'DefaultUicontrolBackgroundColor'), ...
          'ForegroundColor',[1 1 1],...
          'Position',[2 Vpos(1) 98 Bheight]);

%---------------- 'Load routine' title -----------------------
uicontrol(hmv_ctrl,...
          'Style','Text',...
          'BackgroundColor',get(0,'DefaultUicontrolBackgroundColor'), ...
          'ForegroundColor',[1 1 1],...
          'String','Load routine',...
          'Position',[2 Vpos(2) 98 Bheight]);

%---------------- 'Output File' title -----------------------
uicontrol(hmv_ctrl,...
          'Style','Text',...
          'String','Output File',...
          'BackgroundColor',get(0,'DefaultUicontrolBackgroundColor'), ...
          'ForegroundColor',[1 1 1],...
          'Position',[2 Vpos(3) 98 Bheight]);

%---------------- 'Load routine' popup -----------------------
set(findobj('Tag','mv_LoadRoutineName'),...
      'visible','on',...
      'Style','text',...
      'Position',[102 Vpos(2) 200 Bheight],...
      'ToolTipString',['This is the name of the ' NL 'Load Routine currently in use']);

%---------------- 'Output File' text box -----------------------
set(findobj('Tag','mv_OutFile'),...
      'visible','on',...
      'Style','Edit',...
      'Callback','mv_save(''now'')',...
      'Position',[102 Vpos(3) 200 Bheight], ...
      'ToolTipString',['This is the name of the file where to ' NL ...
      'save the buffers content (ascii)']);

%---------------- 'Data File' text box -----------------------
set(findobj('Tag','mv_DataFile'),...
      'visible','on',...
      'Style','Edit',...
      'callback','mv_gdata(0)',...
      'ToolTipString',['This is the name of latest imported file.' NL ...
      'Type-in or modify a file name (+Return key)' NL ' to load data at once.'], ...
      'Position',[102 Vpos(1) 200 Bheight]);

%------ Make message window

uicontrol(hmv_ctrl,...
         'Tag','hmv_message',...
   'Style','Text',...
         'String',['Welcome to MVIEW ' mview_ver],...
         'HorizontalAlignment','center',...
         'Position',[Mposl Vpos(4) Mwidth Bheight]);

%---------------- New output file button --------------------
uicontrol(hmv_ctrl,...
          'Style','pushbutton',...
          'Position',[304 Vpos(3) 92 Bheight],...
          'String','Save',...
          'Callback','mv_save', ...
          'ToolTipString',['Click here to ' NL ...
          'save the buffers content (ascii)']);

%---------------- New data file button -----------------------
uicontrol(hmv_ctrl,...
          'Style','pushbutton',...
          'String','New...',...
          'Callback','mv_gdata',...
          'Position',[304 Vpos(1) 92 Bheight], ...
          'ToolTipString',['Click here to select file(s) to import.' NL ...
          'Multiple choices, directories, URLs (http: ftp: file:) ' NL ...
          'and compressed files (ZIP,GZIP) are possible.']);

Vpos=Vpos-4;
%================ Make action buttons =============================

%---------------- 'Add' button -----------------------

Bposl=2; Bwidth=96;
Bheight=Bheight-2;
uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Add',...
      'CallBack','mv_add;',...
      'Position',[Bposl Vpos(5) Bwidth Bheight],...
      'ToolTipString',['Adds data buffers' NL '(common part only)']);

%---------------- 'Subtract' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Subtract',...
      'CallBack','mv_func2(''subtract'');',...
      'Position',[Bposl Vpos(6) Bwidth Bheight],...
      'ToolTipString','Subtracts data buffers');

%---------------- 'Multiply' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Multiply',...
      'CallBack','mv_func2(''multiply'');',...
      'Position',[Bposl Vpos(7) Bwidth Bheight],...
      'ToolTipString','Multiplies data buffers');

%---------------- 'Divide' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Divide',...
      'CallBack','mv_func2(''divide'');',...
      'Position',[Bposl Vpos(8) Bwidth Bheight],...
      'ToolTipString','Divides two data buffers');

Bposl=Bposl+Bwidth+4;

%---------------- 'Append' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Append',...
      'CallBack','mv_appen;',...
      'Position',[Bposl Vpos(5) Bwidth Bheight],...
      'ToolTipString','Appends (catenates) data buffers');

%---------------- 'Combine' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Combine/Average',...
      'CallBack','mv_combi;',...
      'Position',[Bposl Vpos(6) Bwidth Bheight],...
      'ToolTipString','Combines and weights buffers by monitor (=1 for raw data)');

%---------------- 'Remove' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String','Cut Points',...
      'CallBack','mv_cut;',...
      'Position',[Bposl Vpos(7) Bwidth Bheight],...
      'ToolTipString','Cuts points from the selected buffer plot window');

%---------------- 'Delete' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Delete Buffer',...
      'CallBack','mv_del;',...
      'Position',[Bposl Vpos(8) Bwidth Bheight],...
      'ToolTipString','Deletes (closes) data buffers');

Bposl=Bposl+Bwidth+4;

%---------------- 'Plot' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Plot',...
      'CallBack','mv_plot;',...
      'Position',[Bposl Vpos(5) Bwidth Bheight],...
      'ToolTipString',[ 'Plots the selected data buffer' NL 'Multiple selection brings an overview subplot']);

%---------------- 'Overlay' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Overlay',...
      'CallBack','mv_over;',...
      'Position',[Bposl Vpos(6) Bwidth Bheight],...
      'ToolTipString','Overlays plots for the selected data buffers');

%---------------- 'List' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' List',...
      'CallBack','mv_list;',...
      'Position',[Bposl Vpos(7) Bwidth Bheight],...
      'ToolTipString','Shows statistics for the selected buffers');

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Integrate',...
      'CallBack','mv_sum;',...
      'Position',[Bposl Vpos(8) Bwidth Bheight],...
      'ToolTipString','Integrates the selected buffer');

Bposl=Bposl+Bwidth+4;

%---------------- 'Fit' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Mfit',...
      'CallBack','mv_fit;',...
      'Position',[Bposl Vpos(5) Bwidth Bheight],...
      'ToolTipString','Sends a buffer to MFit for data fitting');

%---------------- 'Interpolate' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String','Interpolate',...
      'CallBack','mv_intp;',...
      'Position',[Bposl Vpos(6) Bwidth Bheight],...
      'ToolTipString','Interpolates a buffer into an other buffer x-axis');

%---------------- 'Transform' button -----------------------

uicontrol(hmv_ctrl,...
      'Style','PushButton',...
      'String',' Transform',...
      'CallBack','mv_diag;',...
      'Position',[Bposl Vpos(7) Bwidth Bheight],...
      'ToolTipString',['Shows a Dialog to perform math ' NL ...
      'operations on the selected buffer' NL ...
      '(Rebin, Rescale, Normalize, Derivate, ...)' ]);



%---------------- 'Buffers' menu -----------------------

hmv_ctrl_all=uimenu(hmv_ctrl,'Label','Buffers');
uimenu(hmv_ctrl_all,'Label','Select all','CallBack','mv_rtidy(1);');
uimenu(hmv_ctrl_all,'Label','Deselect all','CallBack','mv_rtidy(0);');
uimenu(hmv_ctrl_all,'Label','Delete all','CallBack','mv_del(1);',...
                    'Separator','On');

%================ Make buffer windows =============================

Rposl=4; Rwidth=38; Rheight=16; Rspace=4; Rposb= Vpos(9);
Tposl=Rposl+Rwidth+4; Twidth=152; Theight=16; Tspace=4; Tposb= Vpos(9);

uicontrol('Visible','off','Tag','tmv_radio');

for i=1:nbuffs_max

if i > nbuffs_max/2
   Rposl=202; Tposl=Rposl+Rwidth+4;
   Rposb= Vpos(9)+nbuffs_max/2*(Rheight+Rspace);
   Tposb= Vpos(9)+nbuffs_max/2*(Theight+Tspace);
end

   buftag=['mv_buf' num2str(i)];

   uicontrol(hmv_ctrl, ...
     'Tag',buftag,...
     'Style','radio', ...
     'String',num2str(i), ...
     'Userdata',i, ...
     'Callback',['mv_bflst(' '''' buftag '''' ');'],...
     'Position',[Rposl Rposb-(i-1)*(Rheight+Rspace) Rwidth Rheight]);

   hmv_text(i)=uicontrol(hmv_ctrl, ...
     'Style','edit', ...
     'String',' ', ...
     'Position',[Tposl Tposb-(i-1)*(Theight+Tspace) Twidth Theight],...
     'Value',0);

end

%----- Save handles to text window

uicontrol('Visible','off','Tag','hmv_text','Userdata',hmv_text)

%============= Turn the figure on again =====================

set(hmv_ctrl,'position', [Fposl Fposb Fwidth Fheight],...
      'visible','on',...
      'Color',get(0,'DefaultUicontrolBackgroundColor'), ...
      'MenuBar','none',...
      'Name','MVIEW: Control',...
      'Resize','off',...
      'DefaultUicontrolHorizontalAlignment','left');

%===== Update matlab path =====

%mv_path;
disp([ 'Welcome to Mview ' mview_ver ])

