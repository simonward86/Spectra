function mfit(inifile)
%
% MFIT v4.2 (c) M.Zinkin 17.5.95 (m.zinkin1@physics.ox.ac.uk)
% Interactive GUI for non-linear fitting
% inifile is usually empty, 'default','mfit' or any '.ini' file.
%
% Rev E.Farhi 06.98 (manuf@ldv.univ-montp2.fr)
%     DesMcMorrow (des.mcmorrow@risoe.dk)

%colordef white
%=============  Create control window =========================
hmf_ctrl=findobj('tag','mf_ControlWindow');
mfit_ver = '4.3.3 (Aug 23rd 2005)';
if ~isempty(hmf_ctrl) & hmf_ctrl
  delete (hmf_ctrl)
% h=get(hmf_ctrl,'children');
% delete(h);
% set(hmf_ctrl,'visible','off');
end
  hmf_ctrl=figure('Tag','mf_ControlWindow',...
    'DefaultUicontrolBackgroundColor',[1 1 1],...
    'DefaultUicontrolForegroundColor',[0 0 0],...
    'DefaultUicontrolHorizontalAlignment','left',...
    'DeleteFcn','mf_exit',...
    'HandleVisibility','on',...
    'Position',[ 692 38 500 142 ],...
    'MenuBar','none',...
    'NumberTitle','on',...
    'Name','MFIT:Control',...
    'Resize','off',...
    'Visible','off');

%         troc = get(hmf_ctrl);
%end

%================ Make storage ===============================
vars=str2mat('LoadRoutineFile', 'LoadRoutineDir','LoadRoutineName',...
        'FitFuncFile',  'FitFuncDir','FitFuncName',...
        'FitRoutineFile', 'FitRoutineDir','FitRoutineName');
vars=str2mat(vars,...
        'BatchFile', 'BatchDir',...
        'DataDir',...
        'PreviousDataFile',...
        'OutDir');
vars=str2mat(vars,...
        'FigurePosition',...
        'FigureSize',...
        'FigureBgColor',...
        'AxesColor',...
        'FitColor',...
        'EbarColor',...
        'DataColor',...
        'DataColorSelected',...
        'MarkerSize',...
        'DataLineStyle',...
        'AutoGuess',...
        'AutoSave',...
        'AutoRescale',...
        'ShowPwinAtStart',...
        'ShowBatchShell',...
        'ExecAfterLoad',...
        'ExecAfterFit',...
        'TextBoxHeight');
vars=str2mat(vars,...
        'AxesFont', 'AxesFontSize',...
        'LabelFont', 'LabelFontSize',...
        'ContWinPosition',...
        'ParWinPosition',...
        'IniFile',...
        'ShowBatchLine',...
        'FitPoints');



for i=1:size(vars,1)
  var=vars(i,:);
  j=isspace(var);
  var(j)=[];
  uicontrol(hmf_ctrl,...
        'style','text',...
        'tag',['mf_' var],...
        'visible','off');
end



var_temp = str2mat('CmdBatch','OutFile','DataFile');

for i=1:size(var_temp,1)
    var=var_temp(i,:);
    j=isspace(var);
    var(j)=[];

uicontrol(hmf_ctrl,...
        'style','edit',...
        'tag',['mf_' var],...
        'visible','off');
end



vars=str2mat(vars, 'CmdBatch','OutFile','OutDir');

uicontrol(hmf_ctrl,...
      'tag','mf_VarList',...
      'userdata',vars,...
      'visible','off');
%g = get(hmf_ctrl,'userdata')
%g =(get(findobj('tag','mf_VarList'),'userdata'))

%===== File menu ===================================================
hfile=uimenu(hmf_ctrl,'label','&File',...
    'tag','mf_FileMenu');
uimenu(hfile,'label','Do fit',...
    'accelerator','f',...
    'callback','mf_dofit;');
uimenu(hfile,'label','Get starting parameters',...
    'accelerator','g',...
    'callback','mf_guess;');
uimenu(hfile,'label','Read params in MFT file',...
    'callback','mf_opt(''rdpar'');');
uimenu(hfile,'label','Revert fit',...
    'callback','mf_opt(''revertfit'');');
uimenu(hfile,'label','Replot All',...
    'accelerator','p',...
    'callback','mf_gdata(''noload'');',...
    'Separator','on');
uimenu(hfile,'label','Update statistics',...
    'callback','mf_stats;');
uimenu(hfile,'label','Load new data file...',...
    'accelerator','l',...
    'callback','mf_gdata;',...
    'Separator','on');
uimenu(hfile,'label','Reload data',...
    'accelerator','r',...
    'callback','mf_gdata(''noprompt'')');
uimenu(hfile,'label','Set new output file...',...
    'callback','mf_svfil;');
uimenu(hfile,'label','Save...',...
    'callback','mf_save;');
uimenu(hfile,'label','Run batch file...','callback','mf_batch');
uimenu(hfile,'label','Save configuration file',...
    'callback','mf_save(''ini'');',...
    'Separator','on');
uimenu(hfile,'label','Help',...
    'callback','mf_help',...
    'Separator','on');
uimenu(hfile,'label','About...',...
    'callback',[ 'mf_opt(''About MFit ' mfit_ver ''');' ]);
uimenu(hfile,'label','Exit',...
    'accelerator','q',...
    'callback','mf_exit');


%===== Parameters for Control window uicontrol positions ======

Nbuttons=5;
Bspace=2;
Bwidth=(500-Bspace*(Nbuttons+1))/Nbuttons;
Bheight =str2num(get(findobj('tag','mf_TextBoxHeight'),'string'));
if isempty(Bheight), Bheight = 18; end
Bpos=Bspace;
Vpos=[2 27 52 78 104 130 154];
for i=1:7
  Vpos(i)=i*Bspace+(i-1)*Bheight;
end

%================ Make action buttons =============================

%---------------- 'Do Fit' button -----------------------
uicontrol(hmf_ctrl,...
      'Style','PushButton',...
      'String',' Fit',...
      'CallBack','mf_dofit',...
      'ToolTipString', 'Click here to launch the fit process', ...
      'Position',[Bpos Vpos(1) Bwidth Bheight]);

%---------------- 'Get Guess' button -----------------------
Bpos=Bpos+Bwidth+Bspace;
uicontrol(hmf_ctrl,...
      'Style','PushButton',...
      'String',' Guess',...
      'CallBack','mf_guess',...
      'ToolTipString', 'Click here to guess initial fit parameters', ...
      'Position',[Bpos Vpos(1) Bwidth Bheight]);

%---------------- 'Update Plot' button -----------------------
Bpos=Bpos+Bwidth+Bspace;
uicontrol(hmf_ctrl,...
      'Style','PushButton',...
      'String','Plot',...
      'CallBack','mf_uplot(''all'');',...
      'ToolTipString', 'Click here to update plot window', ...
      'Position',[Bpos Vpos(1) Bwidth Bheight]);

%---------------- 'Update statistics' button -----------------------
Bpos=Bpos+Bwidth+Bspace;
uicontrol(hmf_ctrl,...
      'Style','PushButton',...
      'String','Stats',...
      'CallBack','mf_stats;',...
      'ToolTipString', 'Click here to show statistics and fit quality', ...
      'Position',[Bpos Vpos(1) Bwidth Bheight]);

%---------------- 'Save' button -----------------------
Bpos=Bpos+Bwidth+Bspace;
uicontrol(hmf_ctrl,...
      'Style','PushButton',...
      'String','Save',...
      'CallBack','mf_save(''go'')',...
      'ToolTipString', 'Click here to save data and fit results', ...
      'Position',[Bpos Vpos(1) Bwidth Bheight]);

%---------------- View output file button --------------------
uicontrol(hmf_ctrl,...
      'Style','pushbutton',...
      'Position',[356 Vpos(6) 70 Bheight],...
      'String','View',...
      'ToolTipString', 'Click here to view the output file', ...
      'Callback','mf_opt(''viewout'');');


%---------------- View data file button -----------------------
uicontrol(hmf_ctrl,...
      'Style','pushbutton',...
      'String','View',...
      'Callback','mf_opt(''viewdata'');',...
      'ToolTipString', 'Click here to view the data file', ...
      'Position',[356 Vpos(7) 70 Bheight]);

%---------------- New output file button --------------------
uicontrol(hmf_ctrl,...
      'Style','pushbutton',...
      'Position',[428 Vpos(6) 70 Bheight],...
      'String','New...',...
      'ToolTipString', 'Click here to select a new output file', ...
      'Callback','mf_svfil');


%---------------- New data file button -----------------------
uicontrol(hmf_ctrl,...
      'Style','pushbutton',...
      'String','New...',...
      'Callback','mf_gdata',...
      'ToolTipString', 'Click here to select a new data file', ...
      'Position',[428 Vpos(7) 70 Bheight]);


%============== Make text box titles =========================

%---------------- 'Fit Routine' title -----------------------
uicontrol(hmf_ctrl,...
      'Style','Text',...
      'String','Fit routine',...
      'BackgroundColor',get(0,'DefaultUicontrolBackgroundColor'), ...
      'ForegroundColor','k',...
      'ToolTipString', 'This line shows the method used to fit the data to model', ...
      'Position',[2 Vpos(3) 110 Bheight]);

%---------------- 'Fit function' title -----------------------
uicontrol(hmf_ctrl,...
      'Style','Text',...
      'BackgroundColor',get(0,'DefaultUicontrolBackgroundColor'), ...
         'ForegroundColor','k',...
      'String','Fit function',...
      'CallBack','mf_newfn',...
      'ToolTipString', 'The line shows the fit model', ...
      'Position',[2 Vpos(4) 110 Bheight]);

%---------------- 'Load routine' title -----------------------
uicontrol(hmf_ctrl,...
      'Style','Text',...
      'BackgroundColor',get(0,'DefaultUicontrolBackgroundColor'), ...
         'ForegroundColor','k',...
      'String','Load routine',...
      'ToolTipString', 'The line shows the load routine (file format)', ...
      'Position',[2 Vpos(5) 110 Bheight]);

%---------------- 'Output File' title -----------------------
uicontrol(hmf_ctrl,...
      'Style','text',...
      'String','Output File',...
      'BackgroundColor',get(0,'DefaultUicontrolBackgroundColor'), ...
      'ForegroundColor','k',...
      'ToolTipString', 'The line shows the output file', ...
      'Position',[2 Vpos(6) 110 Bheight]);

%---------------- 'Data File' title -----------------------
uicontrol(hmf_ctrl,...
      'Style','text',...
      'String','Data file',...
      'BackgroundColor',get(0,'DefaultUicontrolBackgroundColor'), ...
      'ForegroundColor','k',...
      'ToolTipString', 'The line shows the data file', ...
      'Position',[2 Vpos(7) 110 Bheight]);


%============== Make text boxes =========================================

  set(findobj('Tag','mf_CmdBatch'),...
      'Visible','on',...
      'Style','edit',...
      'String','help',...
      'HorizontalAlignment','left',...
      'Position',[296 Vpos(2) 160 Bheight]);

  uicontrol(hmf_ctrl,...
      'tag','mf_DoItButton',...
      'Style','pushbutton',...
      'String','Do It',...
      'callback','mf_opt(''dobatch'');',...
      'Position',[456 Vpos(2) 40 Bheight]);

%---------------- 'Message Window' -----------------------
uicontrol(hmf_ctrl,...
      'Tag','mf_MessageWindow',...
      'Visible','on',...
      'Style','Text',...
      'HorizontalAlignment','center',...
      'Position',[2 Vpos(2) 294 Bheight]);

%---------------- 'Fit Routine' text -----------------------
set(findobj('Tag','mf_FitRoutineName'),...
      'Visible','on',...
      'Style','text',...
      'Position',[118 Vpos(3) 380 Bheight]);

%---------------- 'Fit function' popup -----------------------
set(findobj('Tag','mf_FitFuncName'),...
      'Visible','on',...
      'Style','text',...
      'Position',[118 Vpos(4) 380 Bheight]);

%---------------- 'Load routine' popup -----------------------
set(findobj('Tag','mf_LoadRoutineName'),...
      'Visible','on',...
      'Style','text',...
      'Position',[118 Vpos(5) 380 Bheight]);

%---------------- 'Output File' text box -----------------------
set(findobj('Tag','mf_OutFile'),...
      'Visible','on',...
      'Style','Edit',...
      'Position',[118 Vpos(6) 238 Bheight]);

%---------------- 'Data File' text box -----------------------
set(findobj('Tag','mf_DataFile'),...
      'Visible','on',...
      'Style','Edit',...
      'callback','mf_gdata(''direct'')',...
      'Position',[118 Vpos(7) 238 Bheight]);

% end of figure building =====================

%===== Read .ini file ===============================================
%---- Work out ini file name ----------------------------------------
if nargin==0
   inifile='mfit.ini';
else
   if isempty(findstr(inifile,'.'))
      inifile=[deblank(inifile) '.ini'];
   end
end

if isempty(dir(inifile)) & ~strcmp(inifile,'mfit.ini')
  fprintf(1,'Error  : %s not found. Using mfit.ini instead.\n',inifile);
  inifile='mfit.ini';
end

%----- Check file exists -------------------------------------------------
fid=fopen(inifile,'r');
if fid==-1
  delete(hmf_ctrl);
  errordlg(['Initialization file ' inifile ' not found'],'MFit : Error');

end
set(findobj('tag','mf_IniFile'),'string',inifile);

%----- Set up tag names for registry section -----------------------------
SecTag   =str2mat('load routines',     'fit functions',   'fit routines');
NameTag  =str2mat('mf_LoadRoutineName','mf_FitFuncName',  'mf_FitRoutineName');
FileTag  =str2mat('mf_LoadRoutineFile','mf_FitFuncFile',  'mf_FitRoutineFile');
DirTag   =str2mat('mf_LoadRoutineDir', 'mf_FitFuncDir',   'mf_FitRoutineDir');
MenuTag  =str2mat('mf_LoadRoutineMenu','mf_FitFuncMenu',  'mf_FitRoutineMenu');
MenuTitle=str2mat('Load Routines',     'Fit Functions',   'Fit Routines');
STag=reshape(SecTag',1,size(SecTag,1)*size(SecTag,2));
disp([ 'Welcome to MFit ' mfit_ver ]);

disp(['MFIT reading ' inifile ' file'])
drawnow
%----- Read line by line to end of .ini file ------------------------------------------
line=fgetl(fid);
while ~any(line==-1)

%-- Read to beginning of section (contains '{')
  while ~any(line==-1) & isempty(findstr(line,'{'))
    line=fgetl(fid);
  end

%-- Get name of section
  Section=lower(strtok(line,'{}'));
  line=fgetl(fid);
  disp(['Reading ' Section ' section...'])
  drawnow

%----- {General} section has lines 'property = value'------------------------
  if ~isempty(findstr(Section,'general'))

    while ~any(line==-1) & isempty(findstr(line,'{'))
      [Name s]=strtok(line,'=');              % Property name
      Value=s(2:length(s));                 % Property value
      if ~isempty(Value) & (line(1)~= '%')
        Name=Name(~isspace(Name));
              Value=deblank(fliplr(deblank(fliplr(Value))));
              hh=findobj('Tag',['mf_' Name]);
              if ~isempty(hh);
                  set(findobj('Tag',['mf_' Name]),'String',Value);
            else
              disp([Name ' not defined'])
            end
      end
      line=fgetl(fid);
    end

%----- {Startup} section has lines to be sent to 'mf_batch' ------------------------
  elseif ~isempty(findstr(Section,'startup'))
    while ~any(line==-1) & isempty(findstr(line,'{'))
      if (line(1)~= '%')
        mf_batch(line);
      end
      line=fgetl(fid);
    end

%----- Registry sections have entries of the form 'm-file name, path, description'-----
  elseif ~isempty(findstr(Section,STag))

    for Sec=1:size(SecTag,1)                        % Step through each section

      if ~isempty(findstr(Section,SecTag(Sec,:)))         % If it's a section
        File=[]; Dir=[]; Name=[];

        hmenu=uimenu(hmf_ctrl,'label',MenuTitle(Sec,:),...   % Make main menu
                  'tag',deblank(MenuTag(Sec,:)));
        uimenu(hmenu,'label','Other...',...             % 'Browse...' entry
            'callback',['mf_brows(''' SecTag(Sec,:) ''');']);
        Sep='on';

        while line~=-1 & isempty(findstr(line,'{'))
          [ff s]=strtok(line,','); ff=ff(~isspace(ff));     % Get m-file name
          [dd s]=strtok(s,','); dd=dd(~isspace(dd));       % Get path
          if isempty(dd), dd=' '; end
          nn=strtok(s,',');                                % Get description
          if isempty(nn)                                    % It's a separator...
                  Sep='on';
          elseif (line(1) ~= '%')                          % It's a registry line, not a comment
            File=str2mat(File, ff);                        % Array of filenames
            Dir=str2mat(Dir, dd);                          % Array of dir names
            nn=deblank(fliplr(deblank(fliplr(nn))));       % Array of descriptions
            Name=str2mat(Name, nn);

%----- Callback sets Name, File, and Directory strings to new values
            Call=[['set(findobj(''tag'',''' deblank(NameTag(Sec,:)) ...
                  '''),''string'',''' nn '''); ']...
                  ['set(findobj(''tag'',''' deblank(DirTag(Sec,:))...
                  '''),''string'',''' dd '''); ']...
                  ['set(findobj(''tag'',''' deblank(FileTag(Sec,:))...
                  '''),''string'',''' ff ''');']];
            if strcmp(deblank(SecTag(Sec,:)),'fit functions')
              Call=[Call ';mf_newfn;'];
            end
            uimenu(hmenu,'label',nn,'callback',Call,'separator',Sep);
            Sep='off';
          end

          line=fgetl(fid);
        end
         File(1,:)=[]; Dir(1,:)=[]; Name(1,:)=[];

%--- Set storage -----------------------------------------------------
      hn = findobj('Tag',deblank(NameTag(Sec,:)));
      hf = findobj('Tag',deblank(FileTag(Sec,:)));
      hd = findobj('Tag',deblank(DirTag(Sec,:)));
      hns = get(hn,'string');
      hfs = get(hf,'string');
      hds = get(hd,'string');

        set(hn,...
          'Userdata',Name);
        set(hf,...
          'Userdata',File);
        set(hd,...
          'Userdata',Dir);

      if ~isempty(hns) & ~isempty(hfs) & ~isempty(hds)
        set(hn,'string',hns);
        set(hf,'string',hfs);
        set(hd,'string',hds);
      end

      end
    end
  end
end

fclose(fid);

% options/links/extensions menu

hext=uimenu(hmf_ctrl,'label','&Options',...
  'tag','mf_ExtMenu');
% fit Control
if exist('mf_fcp')
  hmf_fcpmenu=uimenu(hext,'Label','Fit Control...','Tag','mf_fcpmenu','Callback','mf_fcp');
  h=[ findobj('Tag','mf_dp   ');...
    findobj('Tag','mf_niter');...
    findobj('Tag','mf_stol ')];
  if length(h) == 3
    for i=1:3
      fcp(i)=str2num(get(h(i),'String'));
    end
  else
    fcp=[0.005 20 0.00001];
  end
  set(hmf_fcpmenu,'Userdata',fcp);
end

uimenu(hext,'Label','Convolution: 1D',...
  'tag','mf_mfit_convlv', ...
  'Checked','off', ...
  'Callback','mf_convlv(''show toggle'');');

hh=findobj('Tag','mf_AutoGuess');
hh = get(hh,'string');
if (strcmp(hh,'1'))
  hh = 'on';
else
  hh = 'off';
end
uimenu(hext,...
    'Label','AutoGuess',...
    'Tag','mf_autoguess',...
    'Checked',hh,...
    'Callback','mf_opt(''autoguess'')');
hh=findobj('Tag','mf_AutoSave');
hh = get(hh,'string');
if (strcmp(hh,'1'))
  hh = 'on';
else
  hh = 'off';
end
uimenu(hext,...
    'Label','AutoSave',...
    'Tag','mf_autosave',...
      'Checked',hh,...
    'Callback','mf_opt(''autosave'')');

hh=findobj('Tag','mf_AutoRescale');
hh = get(hh,'string');
if (strcmp(hh,'1'))
  hh = 'on';
else
  hh = 'off';
end
uimenu(hext,...
    'Label','AutoRescale',...
    'Tag','mf_autochgx',...
      'Checked',hh,...
    'Callback','mf_opt(''autochgx'')');

uimenu(hext,'Label','MFit Config...',...
  'Callback','mf_opt(''config'');');

uimenu(hext,'Label','Extensions...',...
  'Separator','on',...
  'Callback','mf_opt(''showext'');');

if exist('rescal')
uimenu(hext,'Label','Launch Rescal',...
  'Callback','rescal;');
end
if exist('mview')
uimenu(hext,'Label','Launch Mview',...
  'Callback','mview;');
end

%============= Turn the figure on again =====================
p=sscanf(get(findobj('tag','mf_ContWinPosition'),'string'),'%d');
if length(p) ~= 2
  p = [ 200 200 ];
end
drawnow;
set(hmf_ctrl,'position', [p(1) p(2) 500 Vpos(7)+Bheight+2],...
      'visible','on',...
      'Color',get(0,'DefaultUicontrolBackgroundColor'),...
      'DefaultUicontrolHorizontalAlignment','left');

%===== Update matlab path =====

mf_msg([ 'Welcome to MFit ' mfit_ver ]);
disp('Use "[...] = fromfit" to get directly data from Mfit.');
disp('Use "tomfit(...)" to send directly data to Mfit.');

figure(hmf_ctrl);
delete(gca);


if str2num(get(findobj('tag','mf_ShowBatchLine'),'string')) == 0
  h1 = findobj('tag','mf_CmdBatch');
  h2 = findobj('tag','mf_DoItButton');
  h3 = findobj('tag','mf_MessageWindow');
  set([ h1 h2 ],'visible','off');
  set(h3,'position',[2 Vpos(2) 494 Bheight]);
end

if str2num(get(findobj('tag','mf_ShowPwinAtStart'),'string'))
  mf_newfn;
end
